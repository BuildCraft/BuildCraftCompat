// DON'T TOUCH THE BUILDSCRIPT[] BLOCK
// its special, and it is only there to make ForgeGradle work correctly.

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
	maven {
		name = "chickenbones"
		url = "http://chickenbones.net/maven/"
	}
    maven {
        url = "http://maven.tterrag.com"
    }
    maven {
        url = "http://maven.ic2.player.to"
    }
    maven {
        url = "http://mobiusstrip.eu/maven"
    }
}

apply plugin: 'forge' // adds the forge dependency
apply plugin: 'maven' // for uploading to a maven repo
// apply plugin: 'checkstyle'

version = "6.4.0"
group= "com.mod-buildcraft-compat"
archivesBaseName = "buildcraft-compat" // the name that all artifacts will use as a base. artifacts names follow this pattern: [baseName]-[appendix]-[version]-[classifier].[extension]

dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.127:dev"

	compile "codechicken:CodeChickenCore:1.7.10-1.0.3.26:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.3.67:dev"
    compile "codechicken:ForgeMultipart:1.7.10-1.1.1.320:dev"
    compile("net.sengir.forestry:forestry_1.7.10:3.4.0.7:dev") {
       exclude module: "buildcraft"
    }
    compile("com.enderio:EnderIO:1.7.10-2.2.6.324:dev"){
       exclude module: "buildcraft"
    }
//    runtime "appeng:appliedenergistics2:rv2-beta-8:dev"
}

minecraft {
    version = "1.7.10-10.13.2.1291" // McVersion-ForgeVersion     this variable is later changed to contain only the MC version, while the apiVersion variable is used for the forge version.  Yeah its stupid, and will be changed eentually.

    runDir = "run" // the directory for ForgeGradle to run Minecraft in

    // replacing stuff in the source
    replace '@VERSION@', project.version
    replace '@MC_VERSION@', version
}

// configure  the source folders
sourceSets {
    main {
        java {
            srcDir 'common'
        }
        resources {
            srcDir 'resources'
        }
    }
    api {
		java {
			srcDir 'api'
		}
    }
}

processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        // ${version}   and    ${mcversion}    are the exact strings being replaced
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, that's not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

project.ext.addDownloadDependency = { String name, String url ->
    def destFile = new File('libs/' + new File(new URL(url).getFile()).getName())

    def downloadTask = task('download' + name, type:Task) {
        outputs.file destFile
        inputs.property 'url', url
        doFirst {
            new URL(url).withInputStream{ i -> destFile.withOutputStream{ it << i }}
        }
    }

    setupDecompWorkspace.dependsOn(downloadTask)
    eclipseClasspath.dependsOn(downloadTask)
}

addDownloadDependency("MineTweaker3", "http://minetweaker3.powerofbytes.com/download/MineTweaker3-Dev-1.7.10-3.0.9C.jar")
addDownloadDependency("AppliedEnergistics2", "http://ae-mod.info/builds/appliedenergistics2-rv2-beta-8-dev.jar")
//addDownloadDependency("MineFactoryReloaded", "http://addons.cursecdn.com/files/2221/833/MineFactoryReloaded-[1.7.10]2.8.0RC6-5-dev.jar")
//addDownloadDependency("CoFHCore", "http://addons.cursecdn.com/files/2226/436/CoFHCore-[1.7.10]3.0.0B9-129-dev.jar")

// --------------------
// extra jar section
// -------------------

// add a source jar
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

// checkstyle {
//     sourceSets = [ sourceSets.main ]
//     configFile = file('guidelines/buildcraft.checkstyle')
// }

// make sure all of these happen when we run build
build.dependsOn sourceJar, deobfJar
