buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "a Russian forum post told me to use this to find the missing files"
            url = "https://repo.spongepowered.org/repository/forge-proxy/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url = "https://jitpack.io"
        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.github.CDAGaming:ForgeGradle:1c670759c5'
    }
}

repositories {
    maven {
        name = "ChickenBones Maven"
        url = "http://chickenbones.net/maven/"
    }
    maven {
        name = "tterrag Maven"
        url = "http://maven.tterrag.com"
    }
    maven {
        name = "Forestry/IC2 Maven"
        url = "http://maven.ic2.player.to"
    }
    maven {
        name = "ProfMobius Maven"
        url = "http://mobiusstrip.eu/maven"
    }
    ivy {
        name "BuildCraft"
        artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-[classifier].[ext]"
    }
    ivy {
        name 'asie dependency mirror'
        artifactPattern "http://asie.pl/javadeps/[module]-[revision](-[classifier]).[ext]"
    }
}

apply plugin: 'forge' // adds the forge dependency
apply plugin: 'maven' // for uploading to a maven repo
// apply plugin: 'checkstyle'

version = "7.1.8"
group = "com.mod-buildcraft-compat"
archivesBaseName = "buildcraft-compat" // the name that all artifacts will use as a base. artifacts names follow this pattern: [baseName]-[appendix]-[version]-[classifier].[extension]

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
    compile "codechicken:ForgeMultipart:1.7.10-1.2.0.345:dev"
    compile "net.sengir.forestry:forestry_1.7.10:4.2.16.64:dev"
    compile name: "QmunityLib", version: "1.7.10-0.1.114-universal", classifier: "deobf"
    compile("com.enderio:EnderIO:1.7.10-2.2.7.334:dev") {
        exclude module: "buildcraft"
    }
    compile name: "MineTweaker3", version: "1.7.10-3.0.10B", classifier: "deobf"
    compile name: "appliedenergistics2", version: "rv3-beta-6", classifier: "dev"
    compile name: "Factorization", version: "1.7.10-0.8.109", classifier: "dev"
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10" // McVersion-ForgeVersion     this variable is later changed to contain only the MC version, while the apiVersion 

    runDir = "run" // the directory for ForgeGradle to run Minecraft in

    // replacing stuff in the source
    replace '@VERSION@', project.version
    replace '@MC_VERSION@', version
}

// configure  the source folders
sourceSets {
    main {
        java {
            srcDir 'common'
        }
        resources {
            srcDir 'resources'
        }
    }
    api {
        java {
            srcDir 'api'
        }
    }
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        // ${version}   and    ${mcversion}    are the exact strings being replaced
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, that's not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// --------------------
// extra jar section
// -------------------

// add a source jar
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

// checkstyle {
//     sourceSets = [ sourceSets.main ]
//     configFile = file('guidelines/buildcraft.checkstyle')
// }


artifacts {
    archives sourceJar
    archives deobfJar
}
